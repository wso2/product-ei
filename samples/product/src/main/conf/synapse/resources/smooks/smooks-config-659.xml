<?xml version="1.0"?>
<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://wso2.com) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<smooks-resource-list
        xmlns="http://www.milyn.org/xsd/smooks-1.1.xsd"
        xmlns:jb="http://www.milyn.org/xsd/smooks/javabean-1.2.xsd"
        xmlns:file="http://www.milyn.org/xsd/smooks/file-routing-1.1.xsd"
        xmlns:ftl="http://www.milyn.org/xsd/smooks/freemarker-1.1.xsd">
  	
	<params>
        	<param name="stream.filter.type">SAX</param>
        	<param name="default.serialization.on">false</param>
    	</params>

    	<!-- Configure the EDI Parser to parse the message stream into a stream of SAX events. -->
	<resource-config selector="org.xml.sax.driver">
		<resource>org.milyn.smooks.edi.EDIReader</resource>
		<param name="mapping-model">repository/samples/resources/smooks/edi-mapping.xml</param>
    	</resource-config> 
    
         <!-- Populate java objects to message data-->
	<jb:bean beanId="order" class="java.util.Hashtable" createOnElement="order">
		<jb:value property="id" decoder="Integer" data="order/id"/>
		<jb:value property="price" decoder="Double" data="order/price"/>
		<jb:value property="quantity" decoder="Integer" data="order/quantity"/>
		<jb:value property="symbol" data="order/symbol"/>
    	</jb:bean>

	<!-- Apply freemarker templating -->
   	<ftl:freemarker applyOnElement="order">
        	<ftl:template><!--<order id="${order.id}">
    	<quantity>${order.quantity}</quantity>
    	<price>${order.price}</price>
    	<product-symbol>${order.symbol}</product-symbol>
	</order>--></ftl:template>
        	<ftl:use>
            		<!-- Output the templating result to the "orderItemSplitStream" file output stream... -->
            		<ftl:outputTo outputStreamResource="orderItemSplitStream"/>
        	</ftl:use>
    	</ftl:freemarker>

        <!-- Create/open a file output stream.  This is writen to by the freemarker template (above).. -->
        <file:outputStream resourceName="orderItemSplitStream" openOnElement="order">
                <file:fileNamePattern>order-${order.id}.xml</file:fileNamePattern>
                <file:destinationDirectoryPattern>/home/lakmali/dev/test/smooks/orders</file:destinationDirectoryPattern>
                <file:highWaterMark mark="100000"/>
        </file:outputStream>

</smooks-resource-list>

