<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://ws.apache.org/ns/synapse">
    <registry provider="org.wso2.carbon.mediation.registry.WSO2Registry">
        <parameter name="cachableDuration">15000</parameter>
    </registry>
    <taskManager provider="org.wso2.carbon.mediation.ntask.NTaskTaskManager"/>
    <proxy name="RespondProxy" startOnLoad="true" trace="enable" transports="http">
        <description/>
        <target>
            <inSequence>
                <log level="custom">
                    <property name="RespondProxy" value="Inside Respond Proxy"/>
                </log>
                <!-- Insert sleep here -->
                <property name="milliseconds" value="1000"/>
                <script language="js"><![CDATA[var ms = mc.getProperty("milliseconds");java.lang.Thread.sleep(ms);]]></script>
                <respond/>
            </inSequence>
        </target>
    </proxy>
    <sequence name="fault">
        <!-- Log the message at the full log level with the ERROR_MESSAGE and the ERROR_CODE-->
        <log level="full">
            <property name="MESSAGE" value="Executing default 'fault' sequence"/>
            <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
            <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
        </log>
        <!-- Drops the messages by default if there is a fault -->
        <drop/>
    </sequence>
    <sequence name="CachingTestPost" trace="enable">
        <property name="TargetUri" value="http://localhost:8480/services/RespondProxy"/>
        <header expression="get-property('TargetUri')" name="To" xmlns:ns="http://org.apache.synapse/xsd"/>
        <cache collector="false"
               hashGenerator="org.wso2.carbon.mediator.cache.digest.DOMHASHGenerator"
               scope="per-host" timeout="30">
            <onCacheHit>
                <log>
                    <property name="CACHEMATCHED" value="CACHEMATCHEDCACHEMATCHED"/>
                </log>
                <respond/>
            </onCacheHit>
            <implementation maxSize="1000" type="memory"/>
        </cache>
        <call/>
        <log level="full">
            <property name="FULL_PAYLOAD" value="Full payload from backend"/>
        </log>
        <property name="RESPONSE" value="true"/>
        <cache collector="true" scope="per-host"/>
        <respond/>
    </sequence>
    <sequence name="main">
        <in>
            <!-- Log all messages passing through -->
            <log level="full"/>
            <!-- ensure that the default configuration only sends if it is one of samples -->
            <!-- Otherwise Synapse would be an open proxy by default (BAD!)               -->
            <filter regex="http://localhost:9000.*" source="get-property('To')">
                <!-- Send the messages where they have been sent (i.e. implicit "To" EPR) -->
                <send/>
            </filter>
        </in>
        <out>
            <send/>
        </out>
        <description>The main sequence for the message mediation</description>
    </sequence>
    <api context="/CachingTest" name="CachingTest">
        <resource inSequence="CachingTestPost" methods="POST"
                   url-mapping="/test"/>
    </api>
    <!-- You can add any flat sequences, endpoints, etc.. to this synapse.xml file if you do
    *not* want to keep the artifacts in several files -->
</definitions>