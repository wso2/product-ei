<data name="EventingSample" serviceNamespace="http://ws.wso2.org/dataservice/samples/eventing_sample">
   <config id="default">
      <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
      <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:file:./samples/database/DATA_SERV_SAMP</property>
      <property name="org.wso2.ws.dataservice.user">wso2ds</property>
      <property name="org.wso2.ws.dataservice.password">wso2ds</property>
      <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
      <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
      <property name="org.wso2.ws.dataservice.validation_query"/>
   </config>
   <query id="addProductQuery" useConfig="default">
      <sql>insert into Products (productCode, productLine, productName, quantityInStock, buyPrice) values (:productCode,:productLine,:productName,:quantityInStock,:buyPrice)</sql>
      <param name="productCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
      <param name="productLine" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
      <param name="productName" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
      <param name="quantityInStock" ordinal="4" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
      <param name="buyPrice" ordinal="5" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
   </query>
   <query id="updateProductQuantityQuery" input-event-trigger="product_stock_low_trigger" useConfig="default">
      <sql>update Products set quantityInStock=:quantityInStock where productCode=:productCode</sql>
      <param name="productCode" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
      <param name="quantityInStock" ordinal="1" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
   </query>
   <query id="getProductByCodeQuery" output-event-trigger="product_line_motorcycles_trigger" useConfig="default">
      <sql>select productCode, productLine, productName, quantityInStock, buyPrice from Products where productCode=:productCode</sql>
      <param name="productCode" ordinal="1" paramType="SCALAR" sqlType="STRING" type="IN"/>
      <result element="Products" rowName="Product">
         <element column="productCode" name="productCode" xsdType="string"/>
         <element column="productLine" name="productLine" xsdType="string"/>
         <element column="productName" name="productName" xsdType="string"/>
         <element column="quantityInStock" name="quantityInStock" xsdType="integer"/>
         <element column="buyPrice" name="buyPrice" requiredRoles="admin" xsdType="double"/>
      </result>
   </query>
   <event-trigger id="product_stock_low_trigger" language="XPath">
      <expression>/updateProductQuantityQuery/quantityInStock&lt;10</expression>
      <target-topic>product_stock_low_topic</target-topic>
      <subscriptions>
         <subscription>mailto:test.automation.dummy@gmail.com</subscription>
      </subscriptions>
   </event-trigger>
   <event-trigger id="product_line_motorcycles_trigger" language="XPath">
      <expression>//*[local-name()='productLine' and namespace-uri()='http://ws.wso2.org/dataservice/samples/eventing_sample']='Motorcycles'</expression>
      <target-topic>product_line_motorcycles_topic</target-topic>
      <subscriptions>
         <subscription>mailto:test.automation.dummy@gmail.com</subscription>
      </subscriptions>
   </event-trigger>
   <operation name="addProduct">
      <call-query href="addProductQuery">
         <with-param name="productCode" query-param="productCode"/>
         <with-param name="productLine" query-param="productLine"/>
         <with-param name="productName" query-param="productName"/>
         <with-param name="quantityInStock" query-param="quantityInStock"/>
         <with-param name="buyPrice" query-param="buyPrice"/>
      </call-query>
   </operation>
   <operation name="updateProductQuantity">
      <call-query href="updateProductQuantityQuery">
         <with-param name="productCode" query-param="productCode"/>
         <with-param name="quantityInStock" query-param="quantityInStock"/>
      </call-query>
   </operation>
   <operation name="getProductByCode">
      <call-query href="getProductByCodeQuery">
         <with-param name="productCode" query-param="productCode"/>
      </call-query>
   </operation>
</data>