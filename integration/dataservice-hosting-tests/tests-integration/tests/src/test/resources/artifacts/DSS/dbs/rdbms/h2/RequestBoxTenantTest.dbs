<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<data enableBoxcarring="true" name="RequestBoxTenantTest" serviceNamespace="http://ws.wso2.org/dataservice/samples/rdbms_sample">
    <config id="default">
        <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
        <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:file:./tmp/database/REQUESTBOXTENANT</property>
        <property name="org.wso2.ws.dataservice.user">wso2ds</property>
        <property name="org.wso2.ws.dataservice.password">wso2ds</property>
        <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
        <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
        <property name="org.wso2.ws.dataservice.autocommit">false</property>
        <property name="org.wso2.ws.dataservice.validation_query">SELECT 1</property>
    </config>
    <query id="select_all_products_query" useConfig="default">
        <sql>SELECT * FROM Products</sql>
        <result element="Products" rowName="Product">
            <element column="productCode" name="productCode" xsdType="string"/>
            <element column="productName" name="productName" xsdType="string"/>
            <element column="productLine" name="productLine" xsdType="string"/>
            <element column="productDescription" name="productDescription" xsdType="string"/>
            <element column="quantityInStock" name="quantityInStock" xsdType="integer"/>
        </result>
    </query>
    <query id="select_product_by_code_query" useConfig="default">
        <sql>SELECT * FROM Products where productCode=:productCode</sql>
        <result element="Products" rowName="products">
            <element column="productName" name="productName" xsdType="string"/>
            <element column="productLine" name="productLine" xsdType="string"/>
            <element column="productDescription" name="productDescription" xsdType="string"/>
            <element column="quantityInStock" name="quantityInStock" xsdType="integer"/>
        </result>
        <param name="productCode" ordinal="1" sqlType="STRING"/>
    </query>
    <query id="select_product_by_code_nExport_query" useConfig="default">
        <sql>SELECT * FROM Products where productCode=:productCode</sql>
        <result element="Products" rowName="products">
            <element column="productCode" export="productCode" name="productCode" xsdType="string"/>
            <element column="productName" export="productName" name="productName" xsdType="string"/>
            <element column="productLine" export="productLine" name="productLine" xsdType="string"/>
            <element column="productDescription" name="productDescription" xsdType="string"/>
            <element column="quantityInStock" name="quantityInStock" xsdType="integer"/>
        </result>
        <param name="productCode" ordinal="1" sqlType="STRING"/>
    </query>
    <query id="insert_products_query" useConfig="default">
        <sql>INSERT INTO Products VALUES(?,?,?,?,?)</sql>
        <param name="productCode" ordinal="1" sqlType="STRING"/>
        <param name="productName" ordinal="2" sqlType="STRING"/>
        <param name="productLine" ordinal="3" sqlType="STRING"/>
        <param name="productDescription" ordinal="4" sqlType="STRING"/>
        <param name="quantityInStock" ordinal="5" sqlType="INTEGER"/>
    </query>
    <query id="select_all_orders_query" useConfig="default">
        <sql>SELECT * FROM Orders</sql>
        <result element="Orders" rowName="Order">
            <element column="orderNumber" name="orderNumber" xsdType="integer"/>
            <element column="productCode" name="productCode" xsdType="string"/>
            <element column="productName" name="productName" xsdType="string"/>
            <element column="productLine" name="productLine" xsdType="string"/>
            <element column="comments" name="comments" xsdType="string"/>
        </result>
    </query>
    <query id="select_order_by_number_query" useConfig="default">
        <sql>SELECT * FROM Orders where orderNumber=:orderNumber</sql>
        <result element="Orders" rowName="Order">
            <element column="productCode" name="productCode" xsdType="string"/>
            <element column="productName" name="productName" xsdType="string"/>
            <element column="productLine" name="productLine" xsdType="string"/>
            <element column="comments" name="comments" xsdType="string"/>
        </result>
        <param name="orderNumber" ordinal="1" sqlType="INTEGER"/>
    </query>
    <query id="insert_orders_query" useConfig="default">
        <sql>INSERT INTO Orders VALUES(?,?,?,?,?)</sql>
        <param name="orderNumber" ordinal="1" sqlType="INTEGER"/>
        <param name="productCode" ordinal="2" sqlType="STRING"/>
        <param name="productName" ordinal="3" sqlType="STRING"/>
        <param name="productLine" ordinal="4" sqlType="STRING"/>
        <param name="comments" ordinal="5" sqlType="STRING"/>
    </query>
    <operation name="select_products_operation">
        <call-query href="select_all_products_query"/>
    </operation>
    <operation name="select_product_by_code_operation">
        <call-query href="select_product_by_code_query">
            <with-param name="productCode" query-param="productCode"/>
        </call-query>
    </operation>
    <operation name="select_product_by_code_nExport_operation">
        <call-query href="select_product_by_code_nExport_query">
            <with-param name="productCode" query-param="productCode"/>
        </call-query>
    </operation>
    <operation name="insert_into_products_operation">
        <call-query href="insert_products_query">
            <with-param name="productCode" query-param="productCode"/>
            <with-param name="productName" query-param="productName"/>
            <with-param name="productLine" query-param="productLine"/>
            <with-param name="productDescription" query-param="productDescription"/>
            <with-param name="quantityInStock" query-param="quantityInStock"/>
        </call-query>
    </operation>
    <operation name="select_orders_operation">
        <call-query href="select_all_orders_query"/>
    </operation>
    <operation name="select_order_by_number_operation">
        <call-query href="select_order_by_number_query">
            <with-param name="orderNumber" query-param="orderNumber"/>
        </call-query>
    </operation>
    <operation name="insert_into_orders_operation">
        <call-query href="insert_orders_query">
            <with-param name="orderNumber" query-param="orderNumber"/>
            <with-param name="productCode" query-param="productCode"/>
            <with-param name="productName" query-param="productName"/>
            <with-param name="productLine" query-param="productLine"/>
            <with-param name="comments" query-param="comments"/>
        </call-query>
    </operation>
    <operation name="insert_into_orders_with_imports_operation">
        <call-query href="insert_orders_query">
            <with-param name="orderNumber" query-param="orderNumber"/>
            <with-param name="comments" query-param="comments"/>
        </call-query>
    </operation>
</data>