<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<data name="ResourcesServiceTest" serviceGroup="Resources" baseURI="http://ws.wso2.org/dataservice/samples/resources_sample">
   <config id="default">                  
      <property name="org.wso2.ws.dataservice.driver">com.mysql.jdbc.Driver</property>                  
      <property name="org.wso2.ws.dataservice.protocol">jdbc:mysql://192.168.4.27:3306/testDatabase_wso2automation_com</property>                  
      <property name="org.wso2.ws.dataservice.user">testAt1_52lTBOdp</property>                  
      <property name="org.wso2.ws.dataservice.password">test123</property>          
      <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
      <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
      <property name="org.wso2.ws.dataservice.validation_query"></property> 
   </config>         
   <query id="getProductByCodeQuery" useConfig="default">                  
      <sql>select productName, productLine, quantityInStock, buyPrice from Products where productCode=?</sql>                  
      <param name="productCode" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="1" />                  
      <result element="Products" rowName="Product">                           
         <element name="productName" column="productName" xsdType="xs:string" />                           
         <element name="productLine" column="productLine" xsdType="xs:string" />                           
         <element name="quantityInStock" column="quantityInStock" xsdType="xs:integer" />                           
         <element name="buyPrice" column="buyPrice" xsdType="xs:double" />                           
      </result>
   </query>
   <query id="getProductsQuery" useConfig="default">                  
      <sql>select productCode, productName, productLine, quantityInStock, buyPrice from Products</sql>                  
      <result element="Products" rowName="Product">                           
         <element name="productCode" column="productCode" xsdType="xs:string" />                           
         <element name="productName" column="productName" xsdType="xs:string" />                           
         <element name="productLine" column="productLine" xsdType="xs:string" />                           
         <element name="quantityInStock" column="quantityInStock" xsdType="xs:integer" />                           
         <element name="buyPrice" column="buyPrice" xsdType="xs:double" />                           
      </result>         
   </query>      
   <query id="updateProductQuery" useConfig="default">                  
      <sql>update Products set productName=?, productLine=?,quantityInStock=?,buyPrice=? WHERE productCode=?</sql>                  
      <param name="productCode" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="5" />                                                                        
      <param name="productName" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="1" />
      <param name="productLine" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="2" />
      <param name="quantityInStock" paramType="SCALAR" sqlType="INTEGER" type="IN" ordinal="3" />                                    
      <param name="buyPrice" paramType="SCALAR" sqlType="DOUBLE" type="IN" ordinal="4" />                                    
   </query>        
   <query id="createProductQuery" useConfig="default">                  
      <sql>insert into Products (productCode, productName, productLine, quantityInStock, buyPrice) values (?,?,?,?,?)</sql>                  
      <param name="productCode" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="1" />
      <param name="productName" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="2" />
      <param name="productLine" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="3" />
      <param name="quantityInStock" paramType="SCALAR" sqlType="INTEGER" type="IN" ordinal="4" />                                    
      <param name="buyPrice" paramType="SCALAR" sqlType="DOUBLE" type="IN" ordinal="5" />                                    
   </query>   
   <query id="deleteProductQuery" useConfig="default">                  
      <sql>delete from Products where productCode=?</sql>                  
      <param name="productCode" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="1" />                  
   </query>        
   <resource path="product/{productCode}" method="GET">
      <call-query href="getProductByCodeQuery">
         <with-param name="productCode" query-param="productCode" />                           
      </call-query>      
   </resource>
   <resource path="product" method="POST">
      <call-query href="createProductQuery">
         <with-param name="productCode" query-param="productCode" />
         <with-param name="productName" query-param="productName" />         
         <with-param name="productLine" query-param="productLine" />         
         <with-param name="quantityInStock" query-param="quantityInStock" />         
         <with-param name="buyPrice" query-param="buyPrice" />
      </call-query>      
   </resource>
   <resource path="product" method="PUT">
      <call-query href="updateProductQuery">
         <with-param name="productCode" query-param="productCode" />
         <with-param name="productName" query-param="productName" />         
         <with-param name="productLine" query-param="productLine" />         
         <with-param name="quantityInStock" query-param="quantityInStock" />         
         <with-param name="buyPrice" query-param="buyPrice" />                   
      </call-query>      
   </resource>
   <resource path="product/{productCode}" method="DELETE">
      <call-query href="deleteProductQuery">
         <with-param name="productCode" query-param="productCode" />                           
      </call-query>      
   </resource>
   <resource path="products" method="GET">
      <call-query href="getProductsQuery" />
   </resource>
</data>

