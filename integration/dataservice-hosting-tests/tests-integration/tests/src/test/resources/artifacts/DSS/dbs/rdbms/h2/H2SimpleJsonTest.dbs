<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<data name="H2SimpleJsonTest" transports="http https local">
   <config id="default">
      <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
      <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:file:./samples/database/DATA_SERV_SAMP</property>
      <property name="org.wso2.ws.dataservice.user">wso2ds</property>
      <property name="org.wso2.ws.dataservice.password">wso2ds</property>
      <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
      <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
      <property name="org.wso2.ws.dataservice.validation_query"/>
   </config>

   <query id="insertBalanceQuery" returnGeneratedKeys="true" useConfig="default">
      <sql>INSERT INTO Accounts (balance) values (:balance)</sql>
      <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
         <element column="1" name="ID" xsdType="integer"/>
      </result>
      <param name="balance" sqlType="DOUBLE"/>
   </query>
   <query id="insertQuery" useConfig="default">
      <sql>insert into Offices values (:officeCode,:city, :telephone,:address1, :address2, :state, :country,:postalcode,:territory);</sql>
      <param name="officeCode" sqlType="STRING"/>
      <param name="city" sqlType="STRING"/>
      <param name="telephone" sqlType="STRING"/>
      <param name="address1" sqlType="STRING"/>
      <param name="address2" sqlType="STRING"/>
      <param name="state" sqlType="STRING"/>
      <param name="country" sqlType="STRING"/>
      <param name="postalcode" sqlType="STRING"/>
      <param name="territory" sqlType="STRING"/>
   </query>
   <query id="selectQuery" useConfig="default">
      <sql>SELECT country from Offices;</sql>
      <result element="Entries" rowName="Entry">
         <element column="country" name="country" xsdType="string"/>
      </result>
   </query>
   <query id="updateQuery" useConfig="default">
      <sql>Update Offices set city = :city, phone = :telephone , addressLine1 = :address1, addressLine2 = :address2, state = :state, country = :country , postalCode = :postalcode, territory = :territory where officeCode = :officeCode</sql>
      <param name="city" sqlType="STRING"/>
      <param name="address1" sqlType="STRING"/>
      <param name="address2" sqlType="STRING"/>
      <param name="state" sqlType="STRING"/>
      <param name="country" sqlType="STRING"/>
      <param name="territory" sqlType="STRING"/>
      <param name="telephone" sqlType="STRING"/>
      <param name="officeCode" sqlType="STRING"/>
      <param name="postalcode" sqlType="STRING"/>
   </query>
   <query id="deleteQuery" useConfig="default">
      <sql>delete from Offices where officeCode = :code ;</sql>
      <param name="code" sqlType="STRING"/>
   </query>
   <resource method="GET" path="/getCountries">
      <call-query href="selectQuery"/>
   </resource>
   <resource method="PUT" path="/updateOffice" returnRequestStatus="true">
      <call-query href="updateQuery">
         <with-param name="city" query-param="city"/>
         <with-param name="address1" query-param="address1"/>
         <with-param name="address2" query-param="address2"/>
         <with-param name="state" query-param="state"/>
         <with-param name="country" query-param="country"/>
         <with-param name="territory" query-param="territory"/>
         <with-param name="telephone" query-param="telephone"/>
         <with-param name="officeCode" query-param="officeCode"/>
         <with-param name="postalcode" query-param="postalcode"/>
      </call-query>
   </resource>
   <resource method="POST" path="/insertOffice" returnRequestStatus="true">
      <call-query href="insertQuery">
         <with-param name="officeCode" query-param="officeCode"/>
         <with-param name="city" query-param="city"/>
         <with-param name="telephone" query-param="telephone"/>
         <with-param name="address1" query-param="address1"/>
         <with-param name="address2" query-param="address2"/>
         <with-param name="state" query-param="state"/>
         <with-param name="country" query-param="country"/>
         <with-param name="postalcode" query-param="postalcode"/>
         <with-param name="territory" query-param="territory"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/deleteOffice/{code}" returnRequestStatus="true">
      <call-query href="deleteQuery">
         <with-param name="code" query-param="code"/>
      </call-query>
   </resource>
   <resource method="POST" path="/insertBalance">
      <call-query href="insertBalanceQuery">
         <with-param name="balance" query-param="balance"/>
      </call-query>
   </resource>

</data>