<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<data description="single service for whole database" enableBatchRequests="false" enableBoxcarring="true" name="BoxcarringTest" serviceNamespace="http://ws.wso2.org/dataservice" serviceStatus="active">
   <config id="default">
       <property name="org.wso2.ws.dataservice.driver">org.h2.Driver</property>
       <property name="org.wso2.ws.dataservice.protocol">jdbc:h2:file:./samples/database/DATA_SERV_SAMP</property>
       <property name="org.wso2.ws.dataservice.user">wso2ds</property>
       <property name="org.wso2.ws.dataservice.password">wso2ds</property>
       <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
       <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
       <property name="org.wso2.ws.dataservice.autocommit">false</property>
       <property name="org.wso2.ws.dataservice.validation_query"/>
   </config>
    <query id="insert_Employees_query" useConfig="default">
        <sql>INSERT INTO Employees(employeeNumber,lastName,firstName,extension,email,officeCode,reportsTo,jobTitle,salary) VALUES(?,?,?,?,?,?,?,?,?)</sql>
        <param name="employeeNumber" ordinal="1" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="lastName" ordinal="2" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="firstName" ordinal="3" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="extension" ordinal="4" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="email" ordinal="5" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="officeCode" ordinal="6" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="reportsTo" ordinal="7" paramType="SCALAR" sqlType="INTEGER" type="IN"/>
        <param name="jobTitle" ordinal="8" paramType="SCALAR" sqlType="STRING" type="IN"/>
        <param name="salary" ordinal="9" paramType="SCALAR" sqlType="DOUBLE" type="IN"/>
    </query>
    <query id="select_all_Employees_query" useConfig="default">
        <sql>SELECT employeeNumber, lastName, firstName, extension, email, officeCode, reportsTo, jobTitle, salary FROM Employees</sql>
        <result element="EmployeesCollection" rowName="Employees">
            <element column="employeeNumber" name="employeeNumber" xsdType="xs:integer"/>
            <element column="lastName" name="lastName" xsdType="xs:string"/>
            <element column="firstName" name="firstName" xsdType="xs:string"/>
            <element column="extension" name="extension" xsdType="xs:string"/>
            <element column="email" name="email" xsdType="xs:string"/>
            <element column="officeCode" name="officeCode" xsdType="xs:string"/>
            <element column="reportsTo" name="reportsTo" xsdType="xs:integer"/>
            <element column="jobTitle" name="jobTitle" xsdType="xs:string"/>
            <element column="salary" name="salary" xsdType="xs:double"/>
        </result>
    </query>
    <operation name="select_all_Employees_operation">
        <call-query href="select_all_Employees_query"/>
    </operation>
    <operation name="insert_Employees_operation">
        <call-query href="insert_Employees_query">
            <with-param name="extension" query-param="extension"/>
            <with-param name="lastName" query-param="lastName"/>
            <with-param name="officeCode" query-param="officeCode"/>
            <with-param name="email" query-param="email"/>
            <with-param name="reportsTo" query-param="reportsTo"/>
            <with-param name="salary" query-param="salary"/>
            <with-param name="firstName" query-param="firstName"/>
            <with-param name="employeeNumber" query-param="employeeNumber"/>
            <with-param name="jobTitle" query-param="jobTitle"/>
        </call-query>
    </operation>
</data>