<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<data name="SqlRSSDataServiceTest" enableBoxcarring="true" serviceGroup="MySql" baseURI="http://ws.wso2.org/dataservice/samples/rdbms_sample">
   <config id="MySqlDataSource">                  
      <property name="org.wso2.ws.dataservice.driver">com.mysql.jdbc.Driver</property>                  
      <property name="org.wso2.ws.dataservice.protocol">jdbc:mysql://192.168.4.27:3306/testDatabase_wso2automation_com</property>                  
      <property name="org.wso2.ws.dataservice.user">testAt1_52lTBOdp</property>                  
      <property name="org.wso2.ws.dataservice.password">test123</property>        
      <property name="org.wso2.ws.dataservice.minpoolsize">1</property>
      <property name="org.wso2.ws.dataservice.maxpoolsize">10</property>
      <property name="org.wso2.ws.dataservice.autocommit">false</property>
      <property name="org.wso2.ws.dataservice.validation_query"></property> 
   </config>         
   <query id="customersInBostonSQL" useConfig="MySqlDataSource">                  
      <sql>select  * from Customers where city = 'Boston' and country = 'USA'</sql>
      <result element="customers" rowName="customer">                           
         <element name="customer-name" column="customerName" xsdType="xs:string" />
         <element name="contact-last-name" column="contactLastName" xsdType="xs:string" />
         <element name="contact-first-name" column="contactFirstName" xsdType="xs:string" />
         <element name="phone" column="phone" xsdType="xs:string" />
         <element name="city" column="city" xsdType="xs:string" />
         <element name="country" column="country" xsdType="xs:string" />
      </result>         
   </query>
   <query id="thousandFiveQuery" useConfig="MySqlDataSource">                                                            
      <sql>select 1500 as value</sql>                                                            
      <result element="Numbers" rowName="Number">                                                                                          
         <element name="value" column="value" export="increment" xsdType="xs:integer" />
      </result>                                 
   </query>
   <query id="employeesByNumberSQL" useConfig="MySqlDataSource">                  
      <sql>select * from Employees where employeeNumber = ?</sql>                  
      <result element="employees" rowName="employee">                         
         <element name="last-name" column="lastName" xsdType="xs:string" />
         <element name="first-name" column="firstName" xsdType="xs:string" />
         <element name="email" column="email" xsdType="xs:string" />
         <element name="salary" column="salary" xsdType="xs:double" />
      </result>                  
      <param name="employeeNumber" paramType="SCALAR" sqlType="INTEGER" type="IN" ordinal="1" />         
   </query>         
   <query id="customerAddressSQL" useConfig="MySqlDataSource">                  
      <sql>select * from Customers where contactLastName = ? and contactFirstName = ?</sql>                  
      <result element="customer-addresses" rowName="customer-address">                           
         <element name="customer-number" column="customerNumber" xsdType="xs:integer" />
         <element name="contact-last-name" column="contactLastName" xsdType="xs:string" />
         <element name="contact-first-name" column="contactFirstName" xsdType="xs:string" />
         <element name="address-line1" column="addressLine1" xsdType="xs:string" />
         <element name="address-line2" column="addressLine2" xsdType="xs:string" />
         <element name="city" column="city" xsdType="xs:string" />
         <element name="state" column="state" xsdType="xs:string" />
         <element name="postal-code" column="postalCode" xsdType="xs:string" />
         <element name="country" column="country" xsdType="xs:string" />
      </result>                  
      <param name="lastName" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="1" />                  
      <param name="firstName" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="2" />         
   </query>         
   <query id="productsSQL" useConfig="MySqlDataSource">                  
      <sql>select * from Products</sql>                  
      <properties>
        <property name="org.wso2.ws.dataservice.query_timeout">100</property>
        <property name="org.wso2.ws.dataservice.fetch_direction">forward</property>
        <property name="org.wso2.ws.dataservice.fetch_size">5</property>
        <property name="org.wso2.ws.dataservice.max_field_size">500000</property>
        <property name="org.wso2.ws.dataservice.max_rows">5000</property>
        <property name="org.wso2.ws.dataservice.autocommit">true</property>
      </properties>
      <result element="Products" rowName="Product">                           
         <element name="productCode" column="productCode" xsdType="xs:string" />                           
         <element name="productName" column="productName" xsdType="xs:string" />                           
         <element name="productLine" column="productLine" xsdType="xs:string" />                           
         <element name="productScale" column="productScale" xsdType="xs:string" />                           
         <element name="productVendor" column="productVendor" xsdType="xs:string" />                           
         <element name="productDescription" column="productDescription" xsdType="xs:string" />                           
         <element name="quantityInStock" column="quantityInStock" xsdType="xs:integer" />                           
         <element name="buyPrice" column="buyPrice" xsdType="xs:double" />                           
         <element name="MSRP" column="MSRP" xsdType="xs:double" />                  
      </result>         
   </query>         
   <query id="setEmployeeSalaryQuery" useConfig="MySqlDataSource">                  
      <sql>update Employees set salary=? where employeeNumber=?</sql>                  
      <param name="salary" paramType="SCALAR" sqlType="DOUBLE" type="IN" ordinal="1" />                  
      <param name="employeeNumber" paramType="SCALAR" sqlType="INTEGER" type="IN" ordinal="2" />         
   </query>         
   <query id="incrementEmployeeSalaryQuery" useConfig="MySqlDataSource">   
      <sql>update Employees set salary=salary+? where employeeNumber=?</sql>                  
      <param name="increment" paramType="SCALAR" sqlType="DOUBLE" type="IN" ordinal="1" />                  
      <param name="employeeNumber" paramType="SCALAR" sqlType="INTEGER" type="IN" ordinal="2" />
      <properties>
         <property name="org.wso2.ws.dataservice.autocommit">true</property>
      </properties>
   </query>         
   <query id="addEmployeeQuery" useConfig="MySqlDataSource">                  
      <sql>insert into Employees (employeeNumber, lastName, firstName, email, salary) values(?,?,?,?,?)</sql>                         
      <param name="employeeNumber" paramType="SCALAR" sqlType="INTEGER" type="IN" ordinal="1" />                  
      <param name="lastName" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="2">                           
         <validateLength minimum="3" maximum="20" />                  
      </param>                  
      <param name="firstName" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="3" />                  
      <param name="email" paramType="SCALAR" sqlType="STRING" type="IN" ordinal="4">                           
         <validatePattern pattern="(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|&quot;(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*&quot;)@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])" />                  
      </param>                  
      <param name="salary" paramType="SCALAR" sqlType="DOUBLE" type="IN" ordinal="5" defaultValue="1500" />         
   </query>
   <query id="deleteEmployeeQuery" useConfig="MySqlDataSource">
      <sql>delete from Employees where employeeNumber = ?</sql>
      <param name="employeeNumber" paramType="SCALAR" sqlType="INTEGER" type="IN" ordinal="1" />
             
   </query>
   <query id="setSalaryForEmployeesQuery" useConfig="MySqlDataSource">                  
      <sql>update Employees set salary=? where employeeNumber in (?)</sql>                  
      <param name="salary" paramType="SCALAR" sqlType="DOUBLE" type="IN" ordinal="1" />                  
      <param name="employeeNumbers" paramType="ARRAY" sqlType="INTEGER" type="IN" ordinal="2" />         
   </query>
   <operation name="customersInBoston">                  
      <call-query href="customersInBostonSQL" />         
   </operation>         
   <operation name="employeesByNumber">                  
      <call-query href="employeesByNumberSQL">                           
         <with-param name="employeeNumber" query-param="employeeNumber" />                  
      </call-query>         
   </operation>         
   <operation name="customerAddress">                  
      <call-query href="customerAddressSQL">                           
         <with-param name="lastName" query-param="lastName" />                           
         <with-param name="firstName" query-param="firstName" />                  
      </call-query>         
   </operation>         
   <operation name="productsInfo">                  
      <call-query href="productsSQL" />         
   </operation>         
   <operation name="setEmployeeSalary">                  
      <call-query href="setEmployeeSalaryQuery">                           
         <with-param name="employeeNumber" query-param="employeeNumber" />                           
         <with-param name="salary" query-param="salary" />                  
      </call-query>         
   </operation>
   <operation name="setSalaryForEmployees">                  
      <call-query href="setSalaryForEmployeesQuery">                           
         <with-param name="salary" query-param="salary" />                  
         <with-param name="employeeNumbers" query-param="employeeNumbers" />
      </call-query>         
   </operation>         
   <operation name="incrementEmployeeSalary">                  
      <call-query href="incrementEmployeeSalaryQuery">                           
         <with-param name="employeeNumber" query-param="employeeNumber" />                           
         <with-param name="increment" query-param="increment" />                  
      </call-query>         
   </operation>
   <operation name="thousandFive">                                                               
      <call-query href="thousandFiveQuery"></call-query>                                 
   </operation>                               
   <operation name="incrementEmployeeSalaryEx">                                                               
      <call-query href="incrementEmployeeSalaryQuery">                                                                                             
         <with-param name="employeeNumber" query-param="employeeNumber" />
      </call-query>                                 
   </operation>                                 
   <operation name="addEmployee">                  
      <call-query href="addEmployeeQuery">                           
         <with-param name="employeeNumber" query-param="employeeNumber" />                           
         <with-param name="lastName" query-param="lastName" />                           
         <with-param name="firstName" query-param="firstName" />                           
         <with-param name="email" query-param="email" />                           
         <with-param name="salary" query-param="salary" />                  
      </call-query>         
   </operation>
   <operation name="deleteEmployeeById">
      <call-query href="deleteEmployeeQuery">
         <with-param name="employeeNumber" query-param="employeeNumber" />
      </call-query>
   </operation>
</data>
